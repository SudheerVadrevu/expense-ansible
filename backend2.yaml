- name: configure the backend services
  hosts: backend
  become: yes
  vars:
    bunny: ExpenseApp@1
    tabu: db.sudheerdevopsengineer.online
  tasks:
   - name: disable the nodejs
     ansible.builtin.command: dnf module disable nodejs -y
  
   - name: enable the nodejs
     ansible.builtin.command: dnf module enable nodejs:20 -y
  
   - name: install nodejs
     ansible.builtin.dnf:
      name: "{{ item }}"
      state: installed
     loop:
      - nodejs
      - mysql

   - name: add an user
     ansible.builtin.user:
      name: expense
   
   - name: add an directory
     ansible.builtin.file:
      path: /app
      state: directory

   - name: download the code
     ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip
  
   - name: unzip the code
     ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes

   - name: npm dependencies
     ansible.builtin.command: npm install
     args:
      chdir: /app
      
   - name: copy the backend service
     ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service
    
   - name: install python mysql dependices
     ansible.builtin.pip:
      name:
      - PyMySQL
      - cryptography
      executable: pip3.9
   
   - name: import data into mysql
     community.mysql.mysql_db:
      login_user: root
      login_password: "{{ bunny }}"
      login_host: "{{ tabu }}"
      target: /app/schema/backend.sql
      state: import
      name: all

   - name: daemon reload
     ansible.builtin.systemd_service:
      daemon_reload: true

   - name: start and enable backend 
     ansible.builtin.service:
      name: backend
      state: started
      enabled: yes